{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './root-saga';\nimport { rootReducer } from './root-reducer';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWares = [process.env.NODE_ENV !== 'production' && logger, sagaMiddleware].filter(middleware => Boolean(middleware));\nconst composeEnhancer = process.env.NODE_ENV !== 'production' && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/byndasma/Documents/CODING/UDEMY/REACT/local-joe/src/store/store.ts"],"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","logger","createSagaMiddleware","rootSaga","rootReducer","persistConfig","key","whitelist","sagaMiddleware","persistedReducer","middleWares","process","env","NODE_ENV","filter","middleware","Boolean","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composedEnhancers","store","undefined","run","persistor"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAkE,OAAlE;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA4D,eAA5D;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AAcA,MAAMC,aAAoC,GAAG;AAC3CC,EAAAA,GAAG,EAAE,MADsC;AAE3CN,EAAAA,OAF2C;AAG3CO,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHgC,CAA7C;AAMA,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AAEA,MAAMO,gBAAgB,GAAGV,cAAc,CAACM,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,MAAMM,WAAW,GAAG,CAClBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCZ,MADvB,EAElBO,cAFkB,EAGlBM,MAHkB,CAGVC,UAAD,IAA0CC,OAAO,CAACD,UAAD,CAHtC,CAApB;AAKA,MAAME,eAAe,GAClBN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACCK,MADD,IAECA,MAAM,CAACC,oCAFT,IAGAxB,OAJF;AAMA,MAAMyB,iBAAiB,GAAGH,eAAe,CAACpB,eAAe,CAAC,GAAGa,WAAJ,CAAhB,CAAzC;AAEA,OAAO,MAAMW,KAAK,GAAGzB,WAAW,CAC9Ba,gBAD8B,EAE9Ba,SAF8B,EAG9BF,iBAH8B,CAAzB;AAMPZ,cAAc,CAACe,GAAf,CAAmBpB,QAAnB;AAEA,OAAO,MAAMqB,SAAS,GAAG1B,YAAY,CAACuB,KAAD,CAA9B","sourcesContent":["import { compose, createStore, applyMiddleware, Middleware } from 'redux';\r\nimport { persistStore, persistReducer, PersistConfig } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { rootSaga } from './root-saga';\r\n\r\nimport { rootReducer } from './root-reducer';\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\ntype ExtendedPersistConfig = PersistConfig<RootState> & {\r\n  whitelist: (keyof RootState)[];\r\n};\r\n\r\nconst persistConfig: ExtendedPersistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['cart'],\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst middleWares = [\r\n  process.env.NODE_ENV !== 'production' && logger,\r\n  sagaMiddleware,\r\n].filter((middleware): middleware is Middleware => Boolean(middleware));\r\n\r\nconst composeEnhancer =\r\n  (process.env.NODE_ENV !== 'production' &&\r\n    window &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  undefined,\r\n  composedEnhancers\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}