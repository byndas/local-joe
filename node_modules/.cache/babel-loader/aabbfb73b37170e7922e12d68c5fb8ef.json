{"ast":null,"code":"var _jsxFileName = \"/Users/byndasma/Documents/CODING/UDEMY/REACT/local-joe/src/components/sign-up-form/sign-up-form.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { AuthErrorCodes } from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\nimport { SignUpContainer } from './sign-up-form.styles';\nimport { signUpStart } from '../../store/user/user.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  displayName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst SignUpForm = () => {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = formFields;\n  const dispatch = useDispatch();\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords do not match');\n      return;\n    }\n\n    try {\n      dispatch(signUpStart(email, password, displayName));\n      resetFormFields();\n    } catch (error) {\n      if (error.code === AuthErrorCodes.EMAIL_EXISTS) {\n        alert('Cannot create user, email already in use');\n      } else {\n        console.log('user creation encountered an error', error);\n      }\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Don't have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Display Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"displayName\",\n        value: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        required: true,\n        onChange: handleChange,\n        name: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Confirm Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"confirmPassword\",\n        value: confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpForm, \"czgOp6ngaMfkJNTDqFrAMwArOhc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/byndasma/Documents/CODING/UDEMY/REACT/local-joe/src/components/sign-up-form/sign-up-form.component.tsx"],"names":["useState","AuthErrorCodes","useDispatch","FormInput","Button","SignUpContainer","signUpStart","defaultFormFields","displayName","email","password","confirmPassword","SignUpForm","formFields","setFormFields","dispatch","resetFormFields","handleSubmit","event","preventDefault","alert","error","code","EMAIL_EXISTS","console","log","handleChange","name","value","target"],"mappings":"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","sourcesContent":["import { useState, FormEvent, ChangeEvent } from 'react';\r\nimport { AuthError, AuthErrorCodes } from 'firebase/auth';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport Button from '../button/button.component';\r\n\r\nimport { SignUpContainer } from './sign-up-form.styles';\r\nimport { signUpStart } from '../../store/user/user.action';\r\n\r\nconst defaultFormFields = {\r\n  displayName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n};\r\n\r\nconst SignUpForm = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { displayName, email, password, confirmPassword } = formFields;\r\n  const dispatch = useDispatch();\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      dispatch(signUpStart(email, password, displayName));\r\n      resetFormFields();\r\n    } catch (error) {\r\n      if ((error as AuthError).code === AuthErrorCodes.EMAIL_EXISTS) {\r\n        alert('Cannot create user, email already in use');\r\n      } else {\r\n        console.log('user creation encountered an error', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <h2>Don't have an account?</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          label='Display Name'\r\n          type='text'\r\n          required\r\n          onChange={handleChange}\r\n          name='displayName'\r\n          value={displayName}\r\n        />\r\n\r\n        <FormInput\r\n          label='Email'\r\n          type='email'\r\n          required\r\n          onChange={handleChange}\r\n          name='email'\r\n          value={email}\r\n        />\r\n\r\n        <FormInput\r\n          label='Password'\r\n          type='password'\r\n          required\r\n          onChange={handleChange}\r\n          name='password'\r\n          value={password}\r\n        />\r\n\r\n        <FormInput\r\n          label='Confirm Password'\r\n          type='password'\r\n          required\r\n          onChange={handleChange}\r\n          name='confirmPassword'\r\n          value={confirmPassword}\r\n        />\r\n        <Button type='submit'>Sign Up</Button>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n"]},"metadata":{},"sourceType":"module"}